"""Add Message table

Revision ID: 99f92011869b
Revises: 
Create Date: 2025-10-22 20:46:12.011146

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '99f92011869b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_community')
    op.drop_table('waste_logs')
    op.drop_table('rewards')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_email')

    op.drop_table('users')
    op.drop_table('messages')
    op.drop_table('recycling_centers')
    op.drop_table('communities')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communities',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('impact_score', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recycling_centers',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), nullable=False),
    sa.Column('accepted_types', sa.VARCHAR(length=255), nullable=True),
    sa.Column('latitude', sa.FLOAT(), nullable=True),
    sa.Column('longitude', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('location', sa.VARCHAR(length=100), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_email', ['email'], unique=1)

    op.create_table('rewards',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('badge_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('points', sa.INTEGER(), nullable=True),
    sa.Column('awarded_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waste_logs',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('waste_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('weight', sa.FLOAT(), nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=255), nullable=True),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('co2_saved', sa.FLOAT(), nullable=True),
    sa.Column('disposal_method', sa.VARCHAR(length=100), nullable=True),
    sa.Column('collection_location', sa.VARCHAR(length=100), nullable=True),
    sa.Column('collection_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('collection_date', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_community',
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('community_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'community_id')
    )
    # ### end Alembic commands ###
